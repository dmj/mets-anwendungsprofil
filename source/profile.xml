<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="profile.xsl"?>
<METS_Profile xmlns="http://www.loc.gov/METS_Profile/v2" xmlns:html="http://www.w3.org/1999/xhtml"
    xmlns:sch="http://purl.oclc.org/dsdl/schematron" xmlns:mix="http://www.loc.gov/mix/v20"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:mets="http://www.loc.gov/METS/" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.loc.gov/METS/ http://www.loc.gov/standards/mets/mets.xsd http://www.loc.gov/METS_Profile/v2 http://www.loc.gov/standards/mets/profile_docs/mets.profile.v2-1.xsd"
    STATUS="provisional" REGISTRATION="unregistered">
    <URI LOCTYPE="OTHER" OTHERLOCTYPE="URI" ASSIGNEDBY="local">tag:diglib.hab.de,2018:METS:v1</URI>
    <title>METS-Anwendungsprofil für Produkte der Massendigitalisierung</title>
    <abstract>Dieses Anwendungsprofil beschreibt das Archiv- und Präsentationsformat für alle Objekte der Massendigitalisierung, namentlich für digitalisierte Drucke, Inkunabeln, Handschriften und grafische Objekte wie Druckgrafiken, Zeichnungen usw.</abstract>
    <date>1970-01-01T00:00:00Z</date>
    <contact>
        <name>David Maus</name>
        <institution>Herzog August Bibliothek Wolfenbüttel</institution>
        <address>Postfach 1364, D-38299 Wolfenbüttel</address>
        <phone>+49-5331-808-317</phone>
        <email>maus@hab.de</email>
    </contact>
    <registration_info regDate="1970-01-01T00:00:00Z" regURI="#fixme"/>
    <related_profile/>
    <profile_context>
        <resource_model>
            <html:p>Dieses Profile beschreibt die METS-Struktur eines <html:span lang="en">Dissemination Information Package</html:span> des OAIS Referenzmodells.</html:p>
        </resource_model>
        <uses>
            <use>
                <html:p>Datenbereitstellung nach <html:a href="http://iiif.io">IIIF</html:a></html:p>
            </use>
        </uses>
    </profile_context>
    <external_schema ID="diglib-rightsmd">
        <name>Kanonisches RDF/XML administrativer Metadaten</name>
        <URL>http://uri.hab.de/instance/schema/diglib-rightsmd</URL>
    </external_schema>
    <external_schema ID="diglib-struct">
        <name>Kanonisches RDF/XML deskriptiver Metadaten von Objektstrukturen</name>
        <URL>http://uri.hab.de/instance/schema/diglib-structmd</URL>
    </external_schema>
    <external_schema ID="niso-mix">
        <name>NISO Technical Metadata for Digital Still Images</name>
        <URL>http://www.loc.gov/standards/mix/mix.xsd</URL>
    </external_schema>
    <description_rules/>
    <controlled_vocabularies>
        <vocabulary>
            <name>Strukturdatenontology</name>
            <maintenance_agency>Herzog August Bibliothek Wolfenbüttel</maintenance_agency>
            <URI>http://uri.hab.de/ontology/diglib-struct</URI>
        </vocabulary>
    </controlled_vocabularies>
    <structural_requirements>
        <metsRootElement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das &lt;mets> Wurzelelement muss ein @OBJID-Attribut mit dem lokalen Identifikator des Objekts besitzen.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:mets">
                                    <sch:assert test="normalize-space(@OBJID)" id="metsRootElement.assert.1"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>
                        Das &lt;mets> Wurzelelement muss ein @LABEL-Attribut mit einem das Objekt identifizierenden Namen besitzen. Der
                        Name wird in der Regel aus dem Namen der die Vorlage besitzenden Einrichtung und der Signatur der Vorlage gebildet.
                    </html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:mets">
                                    <sch:assert test="normalize-space(@LABEL)" id="metsRootElement.assert.2"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das &lt;mets>-Wurzelelement muss ein @PROFILE-Attribut mit dem Wert 'tag:diglib.hab.de,2018:METS:v1' besitzen.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:mets">
                                    <sch:assert test="@PROFILE eq 'tag:diglib.hab.de,2018:METS:v1'" id="metsRootElement.assert.3"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
        </metsRootElement>
        <metsHdr>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das METS-Dokument muss ein &lt;metsHdr>-Element enthalten.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:mets">
                                    <sch:assert test="mets:metsHdr" id="metsHdr.assert.0"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das &lt;metsHdr>-Element muss das @CREATEDATE-Attribut besitzen.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:metsHdr">
                                    <sch:assert test="normalize-space(@CREATEDATE)" id="metsHdr.assert.1"/> 
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das &lt;metsHdr>-Element muss ein &lt;agent>-Element mit @ROLE-Attribut "CUSTODIAN" und dem @TYPE-Attribut "ORGANIZATION" enthalten.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:metsHdr">
                                    <sch:assert test="mets:agent[@ROLE = 'CUSTODIAN'][@TYPE = 'ORGANIZATION']" id="metsHdr.assert.2"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das &lt;agent>-Element muss ein &lt;name>-Element mit dem Wert "Herzog August Bibliothek Wolfenbüttel" enthalten.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:agent[@ROLE = 'CUSTODIAN'][@TYPE = 'ORGANIZATION']">
                                    <sch:assert
                                        test="mets:name = 'Herzog August Bibliothek Wolfenbüttel'" id="metsHdr.assert.3"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="SHOULD">
                <description>
                    <html:p>Das &lt;metsHdr>-Element sollte das @LASTMODDATE mit Datum und Uhrzeit der letzten Dateimodifikation besitzen.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron" >
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:metsHdr">
                                    <sch:assert test="normalize-space(@LASTMODDATE)" id="metsHdr.assert.4"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
        </metsHdr>
        <amdSec>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das METS-Dokument muss einen &lt;amdSec>-Abschnitt enthalten.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:mets">
                                    <sch:assert test="count(mets:amdSec) eq 1" id="amdSec.assert.1"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das &lt;amdSec>-Element muss mindestens einen &lt;rightsMD>-Abschnitt mit administrativen Metadaten enthalten.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:amdSec">
                                    <sch:assert test="mets:rightsMD[mets:mdWrap[@MDTYPE = 'OTHER'][@OTHERMDTYPE = 'RDF']/mets:xmlData]" id="amdSec.assert.2"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das &lt;amdSec>-Element muss mindestens einen &lt;techMD>-Abschnitt mit technischen Metadaten im MIX-Format enthalten.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:amdSec">
                                    <sch:assert test="mets:techMD[mets:mdWrap[@MDTYPE = 'NISOIMG']/mets:xmlData]" id="amdSec.assert.3"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
        </amdSec>
        <fileSec>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das &lt;fileSec>-Element muss einen &lt;fileGrp>-Abschnitt enthalten, dessen @USE-Attribut mit dem Wert 'MASTER' belegt ist.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:fileSec">
                                    <sch:assert test="count(mets:fileGrp[@USE = 'MASTER']) eq 1" id="fileSec.assert.1"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das &lt;fileGrp>-Element darf nur &lt;file>-Element enthalten.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:fileGrp[@USE = 'MASTER']">
                                    <sch:assert test="empty(*[not(self::mets:file)])" id="fileSec.assert.2"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das &lt;fileGrp>-Element muss mindestens ein &lt;file>-Element enthalten.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:fileGrp[@USE = 'MASTER']">
                                    <sch:assert test="mets:file" id="fileSec.assert.3"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
        </fileSec>
        <structMap>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:ul>
                        <html:li>Das METS-Dokument muss einen &lt;structMap>-Abschnitt besitzen, dessen @TYPE-Attribut mit dem Wert 'PHYSICAL' belegt ist.</html:li>
                        <html:li>Diese &lt;structMap> besitzt ein &lt;mets:div>-Element, dessen @TYPE-Attribut mit dem Wert 'physSequence' belegt ist.</html:li>
                        <html:li>Dieses &lt;mets:div>-Element muss ein @ID-Attribut besitzen.</html:li>
                        <html:li>Dieses &lt;div>-Element enthält weitere &lt;div>-Element, deren @TYPE-Attribut mit dem Wert 'page' belegt ist.</html:li>
                        <html:li>Diese &lt;div>-Elemente dürfen nur &lt;fptr>-Elemente enthalten.</html:li>
                        <html:li>Jedes dieser &lt;div>-Element muss ein @ID-Attribut besitzen.</html:li>
                    </html:ul>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:mets">
                                    <sch:assert test="count(mets:structMap[@TYPE = 'PHYSICAL']) eq 1" id="structMap.assert.1"/>
                                </sch:rule>
                                <sch:rule context="mets:structMap[@TYPE = 'PHYSICAL']">
                                    <sch:assert test="count(mets:div[@TYPE = 'physSequence']) eq 1" id="structMap.assert.2"/>
                                    <sch:assert test="mets:div[@TYPE = 'physSequence']/@ID" id="structMap.assert.2a"/>
                                </sch:rule>
                                <sch:rule context="mets:div[@TYPE = 'physSequence']">
                                    <sch:assert test="count(mets:div[@TYPE = 'page']) ge 1" id="structMap.assert.3"/>
                                    <sch:assert test="every $div in mets:div satisfies $div/@TYPE = 'page'" id="structMap.assert.4"/>
                                    <sch:assert test="every $div in mets:div satisfies empty($div/*[not(self::mets:fptr)])" id="structMap.assert.5"/>
                                    <sch:assert test="every $div in mets:div satisfies $div/@ID" id="structMap.assert.5a"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:ul>
                        <html:li>Das METS-Dokument muss einen &lt;structMap>-Abschnitt besitzen, dessen @TYPE-Attribut mit dem Wert 'LOGICAL' belegt ist.</html:li>
                        <html:li>Die in diesem Abschnitt enthaltenen &lt;div>-Elemente dürfen nur andere &lt;div>-Elemente enthalten.</html:li>
                    </html:ul>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:mets">
                                    <sch:assert test="count(mets:structMap[@TYPE = 'LOGICAL']) eq 1" id="structMap.assert.6"/>
                                </sch:rule>
                                <sch:rule context="mets:structMap[@TYPE = 'LOGICAL']">
                                    <sch:assert test="empty(.//*[not(self::mets:div)])" id="structMap.assert.7"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="SHOULD">
                <description>
                    <html:p>Ein &lt;fptr>-Element sollte ein @ID-Attribut haben, aus dem die URI einer IIIF-Annotation gebildet werden kann.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:fptr">
                                    <sch:assert test="@ID" id="structMap.assert.8"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MAY">
                <description>
                    <html:p>Ein &lt;div>-Element kann durch deskriptive Metadaten beschrieben werden, die im @DMDID-Attribut verknüpft sind.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:div">
                                    <sch:assert test="normalize-space(@DMDID)" id="structMap.assert.9"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
        </structMap>
        <structLink>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:ul>
                        <html:li>Das METS-Dokument muss einen &lt;structLink>-Abschnitt besitzen.</html:li>
                    </html:ul>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:mets">
                                    <sch:assert test="count(mets:structLink) eq 1" id="structLink.assert.1"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
        </structLink>
        <multiSection>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das &lt;fileGrp>-Element muss mit administrativen Metadaten verknüpft sein.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:fileGrp[@USE = 'MASTER']">
                                    <sch:assert test="normalize-space(@ADMID)" id="multiSection.assert.1"/>
                                    <sch:assert test="/mets:mets/mets:amdSec/mets:rightsMD[@ID = tokenize(normalize-space(current()/@ADMID), ' ')]" id="multiSection.assert.2"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Jedes &lt;file>-Element muss mit technischen Metadaten verknüpft sein.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:file">
                                    <sch:assert test="normalize-space(@ADMID)" id="multiSection.assert.3"/>
                                    <sch:assert test="/mets:mets/mets:amdSec/mets:techMD[@ID = tokenize(normalize-space(current()/@ADMID), ' ')]" id="multiSection.assert.4"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Alle Werte des @TYPE-Attributs eines &lt;div>-Elements müssen der <html:a href="http://uri.hab.de/ontology/diglib-struct">Strukturdatenontologie</html:a> entnommen sein.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:div[@TYPE]">
                                    <sch:assert test="concat('http://uri.hab.de/ontology/diglib-struct#', @TYPE) = doc('http://uri.hab.de/ontology/diglib-struct.rdf')//rdfs:Class/@rdf:about" id="multiSection.assert.5"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:ul>
                        <html:li>Jedes &lt;smLink>-Element des &lt;structLink>-Abschnitts verbindet ein &lt;div>-Element der logischen mit einem oderer mehreren &lt;div>-Elementen der physischen &lt;structMap>.</html:li>
                        <html:li>Diese Verbindung geht immer vom &lt;div> der logischen zum &lt;div> der physischen &lt;structMap>.</html:li>
                    </html:ul>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:structLink">
                                    <sch:assert test="every $link in mets:smLink satisfies /mets:mets/mets:structMap[@TYPE = 'LOGICAL']//mets:div[@ID = $link/@xlink:from]" id="multiSection.assert.6"/>
                                    <sch:assert test="every $link in mets:smLink satisfies /mets:mets/mets:structMap[@TYPE = 'PHYSICAL']//mets:div[@ID = $link/@xlink:to]" id="multiSection.assert.7"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Die Werte eines @DMDID-Attributs müssen ein &lt;dmdSec>-Element referenzieren.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="*[@DMDID]">
                                    <sch:assert test="exists(//mets:dmdSec[@ID = tokenize(normalize-space(current()/@DMDID), ' ')])" id="multiSection.assert.8"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Die Werte eines @ADMID-Attributs müssen eine Abschnitt innerhalb des &lt;amdSec>-Elements referenzieren.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="*[@ADMID]">
                                    <sch:assert test="exists(//mets:amdSec/mets:*[@ID = tokenize(normalize-space(current()/@ADMID), ' ')])" id="multiSection.assert.9"/>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
        </multiSection>
    </structural_requirements>
    <technical_requirements/>
    <tool>
        <name>Validierende XProc 1.0 Pipeline</name>
        <agency>Herzog August Bibliothek Wolfenbüttel</agency>
        <description>
            <html:p>Validiert eine METS-Datei gegen die hier aufgeführten Regeln.</html:p>
        </description>
    </tool>
    <Appendix NUMBER="1">
        <xi:include href="../examples/drucke_db-755-1s/mets.xml"/>
    </Appendix>
</METS_Profile>