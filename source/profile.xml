<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="profile.xsl"?>
<METS_Profile xmlns="http://www.loc.gov/METS_Profile/v2" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:exif="https://www.w3.org/2003/12/exif/ns#"
    xmlns:sch="http://purl.oclc.org/dsdl/schematron"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:mets="http://www.loc.gov/METS/" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:mix="http://www.loc.gov/mix/v20"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.loc.gov/METS/ http://www.loc.gov/standards/mets/version112/mets.xsd http://www.loc.gov/METS_Profile/v2 http://www.loc.gov/standards/mets/profile_docs/mets.profile.v2-1.xsd"
    STATUS="provisional" REGISTRATION="unregistered">
    <URI LOCTYPE="OTHER" OTHERLOCTYPE="URI" ASSIGNEDBY="local">tag:diglib.hab.de,2018:METS:v1</URI>
    <title>METS-Anwendungsprofil für die Anzeige von Produkten der Massendigitalisierung</title>
    <abstract>Dieses Anwendungsprofil beschreibt das Präsentationsformat für Objekte der Massendigitalisierung, namentlich für digitalisierte Drucke, Inkunabeln, Handschriften und grafische Objekte wie Druckgrafiken, Zeichnungen usw.</abstract>
    <date>2018-12-19T09:11:20+02:00</date>
    <contact>
        <name>David Maus</name>
        <institution>Herzog August Bibliothek Wolfenbüttel</institution>
        <address>Postfach 1364, D-38299 Wolfenbüttel</address>
        <phone>+49-5331-808-317</phone>
        <email>maus@hab.de</email>
    </contact>
    <related_profile/>
    <profile_context>
        <resource_model>
            <html:p>Dieses Profile beschreibt die METS-Struktur eines <html:span lang="en">Dissemination Information Package</html:span> des OAIS Referenzmodells.</html:p>
        </resource_model>
        <uses>
            <use>
                <html:p>Datenbereitstellung nach <html:a href="http://iiif.io">IIIF</html:a></html:p>
            </use>
        </uses>
    </profile_context>
    <external_schema ID="diglib-rightsmd">
        <name>Kanonisches RDF/XML administrativer Metadaten</name>
        <URL>http://uri.hab.de/instance/schema/diglib-rightsmd</URL>
    </external_schema>
    <external_schema ID="diglib-struct">
        <name>Kanonisches RDF/XML deskriptiver Metadaten von Objektstrukturen</name>
        <URL>http://uri.hab.de/instance/schema/diglib-structmd</URL>
    </external_schema>
    <external_schema>
        <name>NISO Metadata for Images in XML Schema</name>
        <URL>http://www.loc.gov/standards/mix/</URL>
    </external_schema>
    <description_rules/>
    <controlled_vocabularies>
        <vocabulary>
            <name>Strukturdatenontology</name>
            <maintenance_agency>Herzog August Bibliothek Wolfenbüttel</maintenance_agency>
            <URI>http://uri.hab.de/ontology/diglib-struct</URI>
        </vocabulary>
    </controlled_vocabularies>
    <structural_requirements>
        <metsRootElement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das Wurzelelement besitzt ein @OBJID-Attribut mit dem lokalen Identifikator des Objekts.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:mets">
                                    <sch:assert test="normalize-space(@OBJID)" id="metsRootElement.assert.1">
                                        Das Wurzelelement besitzt ein @OBJID-Attribut mit dem lokalen Identifikator des Objekts.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>
                        Das Wurzelelement besitzt ein @LABEL-Attribut mit einem das Objekt identifizierenden Namen. Der
                        Name wird in der Regel aus dem Namen der die Vorlage besitzenden Einrichtung und der Signatur der Vorlage gebildet.
                    </html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:mets">
                                    <sch:assert test="normalize-space(@LABEL)" id="metsRootElement.assert.2">
                                        Das Wurzelelement besitzt ein @LABEL-Attribut mit einem das Objekt identifizierenden Namen.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das Wurzelelement besitzt ein @PROFILE-Attribut mit dem Wert "tag:diglib.hab.de,2018:METS:v1".</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:mets">
                                    <sch:assert test="@PROFILE eq 'tag:diglib.hab.de,2018:METS:v1'" id="metsRootElement.assert.3">
                                        Das Wurzelelement besitzt ein @PROFILE-Attribut mit dem Wert "tag:diglib.hab.de,2018:METS:v1".
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
        </metsRootElement>
        <metsHdr>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das METS-Dokument enthält ein &lt;metsHdr>-Element.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:mets">
                                    <sch:assert test="mets:metsHdr" id="metsHdr.assert.0">
                                        Das METS-Dokument enthält ein &lt;metsHdr>-Element.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das &lt;metsHdr>-Element besitzt ein @CREATEDATE-Attribut mit Datum und Uhrzeit der Dokumenterstellung.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:metsHdr">
                                    <sch:assert test="normalize-space(@CREATEDATE)" id="metsHdr.assert.1">
                                        Das &lt;metsHdr>-Element besitzt ein @CREATEDATE-Attribut mit Datum und Uhrzeit der Dokumenterstellung.
                                    </sch:assert> 
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das &lt;metsHdr>-Element enthält ein &lt;agent>-Element, dessen Attribut @ROLE den Wert "CUSTODIAN" und dessen @TYPE-Attribut den Wert "ORGANIZATION" besitzt.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:metsHdr">
                                    <sch:assert test="mets:agent[@ROLE = 'CUSTODIAN'][@TYPE = 'ORGANIZATION']" id="metsHdr.assert.2">
                                        Das &lt;metsHdr>-Element enthält ein &lt;agent>-Element, dessen Attribut @ROLE den Wert "CUSTODIAN" und dessen @TYPE-Attribut den Wert "ORGANIZATION" besitzt.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das &lt;agent>-Element enthält ein &lt;name>-Element mit dem Wert "Herzog August Bibliothek Wolfenbüttel".</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:agent[@ROLE = 'CUSTODIAN'][@TYPE = 'ORGANIZATION']">
                                    <sch:assert test="mets:name = 'Herzog August Bibliothek Wolfenbüttel'" id="metsHdr.assert.3">
                                        Das &lt;agent>-Element enthält ein &lt;name>-Element mit dem Wert "Herzog August Bibliothek Wolfenbüttel".
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="SHOULD">
                <description>
                    <html:p>Das &lt;metsHdr>-Element besitzt das Attribute @LASTMODDATE mit Datum und Uhrzeit der letzten Dateimodifikation.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron" >
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:metsHdr">
                                    <sch:assert test="normalize-space(@LASTMODDATE)" id="metsHdr.assert.4">
                                        Das &lt;metsHdr>-Element besitzt das Attribute @LASTMODDATE mit Datum und Uhrzeit der letzten Dateimodifikation.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
        </metsHdr>
        <amdSec>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das METS-Dokument enthält einen &lt;amdSec>-Abschnitt.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:mets">
                                    <sch:assert test="count(mets:amdSec) eq 1" id="amdSec.assert.1">
                                        Das METS-Dokument enthält einen &lt;amdSec>-Abschnitt.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das &lt;amdSec>-Element enthält einen &lt;rightsMD>-Abschnitt mit administrativen Metadaten.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:amdSec">
                                    <sch:assert test="count(mets:rightsMD[mets:mdWrap[@MDTYPE = 'OTHER'][@OTHERMDTYPE = 'RDF']/mets:xmlData]) eq 1" id="amdSec.assert.2">
                                        Das &lt;amdSec>-Element enthält einen &lt;rightsMD>-Abschnitt mit administrativen Metadaten.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
        </amdSec>
        <fileSec>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das &lt;fileSec>-Element enthält einen &lt;fileGrp>-Abschnitt, dessen @USE-Attribut mit dem Wert 'MASTER' belegt ist.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:fileSec">
                                    <sch:assert test="count(mets:fileGrp[@USE = 'MASTER']) eq 1" id="fileSec.assert.1">
                                        Das &lt;fileSec>-Element enthält einen &lt;fileGrp>-Abschnitt, dessen @USE-Attribut mit dem Wert 'MASTER' belegt ist.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das &lt;fileGrp>-Element enthält nur &lt;file>-Elemente.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:fileGrp[@USE = 'MASTER']">
                                    <sch:assert test="empty(*[not(self::mets:file)])" id="fileSec.assert.2">
                                        Das &lt;fileGrp>-Element enthält nur &lt;file>-Elemente.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das &lt;fileGrp>-Element enthält mindestens ein &lt;file>-Element.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:fileGrp[@USE = 'MASTER']">
                                    <sch:assert test="exists(mets:file)" id="fileSec.assert.3">
                                        Das &lt;fileGrp>-Element enthält mindestens ein &lt;file>-Element.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
        </fileSec>
        <structMap>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das METS-Dokument enthält ein &lt;structMap>-Element, dessen @TYPE-Attribut mit dem Wert "PHYSICAL" belegt ist.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:mets">
                                    <sch:assert test="count(mets:structMap[@TYPE = 'PHYSICAL']) eq 1" id="structMap.assert.1">
                                        Das METS-Dokument enthält ein &lt;structMap>-Element, dessen @TYPE-Attribut mit dem Wert "PHYSICAL" belegt ist.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Die physische &lt;structMap> enthält ein &lt;div>-Element, das ein @ID-Attribut besitzt und dessen @TYPE-Attribut mit dem Wert "physSequence" belegt ist.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:structMap[@TYPE = 'PHYSICAL']">
                                    <sch:assert test="count(mets:div[@TYPE = 'physSequence']) eq 1" id="structMap.assert.2">
                                        Die physische &lt;structMap> enthält ein &lt;div>-Element, dessen @TYPE-Attribute mit dem Wert "physSequence" belegt ist.
                                    </sch:assert>
                                    <sch:assert test="mets:div[@TYPE = 'physSequence']/@ID" id="structMap.assert.2a">
                                        Das &lt;div>-Element der physischen Sequence besitzt ein @ID-Attribut.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das &lt;div>-Element der physischen Sequenz enthält nur weitere &lt;div>-Elemente, die ein @ID-Attribut besitzen und deren @TYPE-Attribut mit dem Wert "page" belegt ist.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:structMap[@TYPE = 'PHYSICAL']/mets:div[@TYPE = 'physSequence']">
                                    <sch:assert test="every $div in * satisfies ($div/self::mets:div and $div/@TYPE = 'page' and $div/@ID)" id="structMap.assert.4">
                                        Das &lt;div>-Element der physischen Sequenz enthält ausschließlich weitere &lt;div>-Elemente, die ein @ID-Attribut besitzen und deren @TYPE-Attribut mit dem Wert "page" belegt ist.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Die &lt;div>-Element der physischen Sequenz enthalten nur &lt;fptr>-Elemente.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:div[@TYPE = 'physSequence']/mets:div">
                                    <sch:assert test="count(*) eq count(mets:fptr)">
                                        Die &lt;div>-Element der physischen Sequenz enthalten nur &lt;fptr>-Elemente.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das METS-Dokument enthält einen &lt;structMap>-Abschnitt, dessen @TYPE-Attribut mit dem Wert 'LOGICAL' belegt ist.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:mets">
                                    <sch:assert test="count(mets:structMap[@TYPE = 'LOGICAL']) eq 1" id="structMap.assert.6">
                                        Das METS-Dokument enthält einen &lt;structMap>-Abschnitt, dessen @TYPE-Attribut mit dem Wert 'LOGICAL' belegt ist.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Die logische &lt;structMap> enthält nur &lt;div>-Elemente.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:structMap[@TYPE = 'LOGICAL']">
                                    <sch:assert test="count(.//*) eq count(.//mets:div)">
                                        Die logische &lt;structMap> enthält nur &lt;div>-Elemente.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="SHOULD">
                <description>
                    <html:p>Das &lt;fptr>-Element besitzt ein @ID-Attribut.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:fptr">
                                    <sch:assert test="@ID" id="structMap.assert.8">
                                        Das &lt;fptr>-Element besitzt ein @ID-Attribut.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
        </structMap>
        <structLink>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das METS-Dokument besitzt einen &lt;structLink>-Abschnitt.</html:p>                    
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:mets">
                                    <sch:assert test="count(mets:structLink) eq 1" id="structLink.assert.1">
                                        Das METS-Dokument besitzt einen &lt;structLink>-Abschnitt.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
        </structLink>
        <multiSection>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Das &lt;fileGrp>-Element ist mit administrativen Metadaten verknüpft.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:fileGrp[@USE = 'MASTER']">
                                    <sch:assert test="/mets:mets/mets:amdSec/mets:rightsMD[@ID = tokenize(normalize-space(current()/@ADMID), ' ')]" id="multiSection.assert.2">
                                        Das &lt;fileGrp>-Element ist mit administrativen Metadaten verknüpft.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Alle Werte des @TYPE-Attributs eines &lt;div>-Elements sind der Strukturdatenontologie entnommen sein.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:div[@TYPE]">
                                    <sch:assert test="concat('http://uri.hab.de/ontology/diglib-struct#', @TYPE) = doc('http://uri.hab.de/ontology/diglib-struct.rdf')//rdfs:Class/@rdf:about" id="multiSection.assert.5">
                                        Alle Werte des @TYPE-Attributs eines &lt;div>-Elements sind der Strukturdatenontologie entnommen sein.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Jedes &lt;div>-Element der physischen &lt;structMap> ist mit Metadaten beschrieben, die die Dimensionen der Seite angeben.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:structMap[@TYPE = 'PHYSICAL']/mets:div/mets:div">
                                    <sch:let name="dmdSec" value="/mets:mets/mets:dmdSec[@ID = tokenize(normalize-space(current()/@DMDID))]"/>
                                    <sch:let name="dmdSecRdf" value="$dmdSec/mets:mdWrap[@MDTYPE = 'OTHER'][@OTHERMDTYPE = 'RDF']/mets:xmlData/rdf:Description"/>
                                    <sch:assert test="exists($dmdSecRdf[exif:width and exif:height])" id="multiSection.assert.10">
                                        Jedes &lt;div>-Element der physischen &lt;structMap> ist mit Metadaten beschrieben, die die Dimensionen der Seite angeben.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>
                        Jedes &lt;smLink>-Element des &lt;structLink>-Abschnitts verbindet ein &lt;div>-Element der logischen mit einem oder mehreren &lt;div>-Elementen der physischen &lt;structMap>. 
                    </html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:structLink/mets:smLink">
                                    <sch:let name="logical" value="/mets:mets/mets:structMap[@TYPE = 'LOGICAL']//mets:div/@ID"/>
                                    <sch:let name="physical" value="/mets:mets/mets:structMap[@TYPE = 'PHYSICAL']//mets:div/@ID"/>
                                    <sch:assert test="@xlink:from = $logical and @xlink:to = $physical">
                                        Jedes &lt;smLink>-Element des &lt;structLink>-Abschnitts verbindet ein &lt;div>-Element der logischen mit einem oder mehreren &lt;div>-Elementen der physischen &lt;structMap>.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Die Werte eines @DMDID-Attributs referenzieren ein &lt;dmdSec>-Element.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="*[@DMDID]">
                                    <sch:assert test="exists(//mets:dmdSec[@ID = tokenize(normalize-space(current()/@DMDID), ' ')])" id="multiSection.assert.8">
                                        Die Werte eines @DMDID-Attributs referenzieren ein &lt;dmdSec>-Element.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="MUST">
                <description>
                    <html:p>Die Werte eines @ADMID-Attributs referenzieren ein Element innerhalb des &lt;amdSec>-Elements.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="*[@ADMID]">
                                    <sch:assert test="exists(//mets:amdSec/mets:*[@ID = tokenize(normalize-space(current()/@ADMID), ' ')])" id="multiSection.assert.9">
                                        Die Werte eines @ADMID-Attributs referenzieren ein Element innerhalb des &lt;amdSec>-Elements.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
            <requirement REQLEVEL="SHOULD">
                <description>
                    <html:p>Das &lt;file>-Element ist mit technischen Bildmetadaten verknüpft.</html:p>
                </description>
                <tests>
                    <test TESTLANGUAGE="Schematron">
                        <testWrap>
                            <testXML>
                                <sch:rule context="mets:file">
                                    <sch:assert test="exists(//mets:amdSec/mets:techMD[@ID = tokenize(normalize-space(current()/@ADMID))]/mets:mdWrap[@MDTYPE = 'NISOIMG']/mets:xmlData/mix:mix)" id="multiSection.assert.11">
                                        Das &lt;file>-Element ist mit technischen Bildmetadaten verknüpft.
                                    </sch:assert>
                                </sch:rule>
                            </testXML>
                        </testWrap>
                    </test>
                </tests>
            </requirement>
        </multiSection>
    </structural_requirements>
    <technical_requirements/>
    <tool>
        <name>Validierende XProc 1.0 Pipeline</name>
        <agency>Herzog August Bibliothek Wolfenbüttel</agency>
        <URI>tools/validate-profile.xpl</URI>
        <description>
            <html:p>Validiert eine METS-Datei gegen die hier aufgeführten Regeln.</html:p>
        </description>
    </tool>
    <Appendix NUMBER="1">
        <xi:include href="../examples/drucke_db-755-1s/mets.xml"/>
    </Appendix>
</METS_Profile>